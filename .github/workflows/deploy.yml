name: Deploy V1

# WORKFLOW SETUP : 
# 1 : Generate token (write:packages, delete:packages)
# 2 : Add secret ['secrets.SERVER_HOST','secrets.SERVER_USER','secrets.SERVER_SSH_KEY','secrets.SERVER_PORT']
# 3 : Replace 'git pull origin main' with 'git pull origin release' during the rebuild phase
# 4 : Change the push branch name to 'release

on:
  push:
    branches:
      - x  # "release" pour CW

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      # Fix uppercase issues with URLs
      - name: UPPER to lower
        run: |
          echo "ACTOR_LOWER=$(echo '${{ github.actor }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
          echo "REPO_LOWER=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      # Track updates on API & front
      - name: Set up Git for checking changes
        run: git fetch --prune --unshallow

      - name: Check if front has changed
        id: check_frontend
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '^front/'; then
            echo "FRONTEND_CHANGED=true" >> $GITHUB_ENV
          else
            echo "FRONTEND_CHANGED=false" >> $GITHUB_ENV
          fi

      - name: Check if api has changed
        id: check_api
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '^api/'; then
            echo "API_CHANGED=true" >> $GITHUB_ENV
          else
            echo "API_CHANGED=false" >> $GITHUB_ENV
          fi

      # Stop if no changes were made
      - name: Stop if no changes were made to front or api
        run: |
          if [[ "$FRONTEND_CHANGED" == "false" && "$API_CHANGED" == "false" ]]; then
            echo "Aucun changement dans frontend ou API, arrÃªt du workflow."
            exit 0
          fi

      - name: Login
        run: echo "${{ secrets.ghrc }}" | docker login ghcr.io -u ${{ env.ACTOR_LOWER }} --password-stdin

      - name: Build Front
        if: env.FRONTEND_CHANGED == 'true'
        run: |
          docker build -f ./front/Dockerfile -t ghcr.io/${{ env.REPO_LOWER }}/frontend:latest ./front
          docker push ghcr.io/${{ env.REPO_LOWER }}/frontend:latest

      - name: Build API
        if: env.API_CHANGED == 'true'
        run: |
          docker build -f ./api/Dockerfile.prod -t ghcr.io/${{ env.REPO_LOWER }}/api:latest ./api
          docker build -f ./api/Dockerfile.dev -t ghcr.io/${{ env.REPO_LOWER }}/api.dev:latest ./api
          docker push ghcr.io/${{ env.REPO_LOWER }}/api:latest
          docker push ghcr.io/${{ env.REPO_LOWER }}/api.dev:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest


    # Rebuild without downtime, only if changes were made + remove unused images
    steps:
      - name: Deploy on Server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT}}
          script: |
            cd /home/$(whoami)/cleanwalk-org-v2/
            pwd
            git pull origin main
            docker compose -f docker-compose.prod.yml pull
            docker compose -f docker-compose.prod.yml up -d --remove-orphans
            docker image prune -f
